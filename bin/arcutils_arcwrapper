#!/bin/zsh

declare -r cmd=$0
declare -r envoker=$1
declare -r diff_branch=$2
declare -r message=$3
declare -r reviewer=$4
declare -r current_branch="$(git symbolic-ref HEAD 2> /dev/null | cut -d'/' -f3)"
declare -r all_arguments="$*"
declare -r remaining_arguments=${all_arguments#*"$3"}

echo "message: $message"

if [ -z "$(git diff HEAD --shortstat)" && ! -z "$reviewer" ] ; then
  echo 'ERROR: No changes in working tree; cowardly refusing to continue.'
  exit 1
fi

if [ -z "$reviewer" ] ; then
  echo "$cmd: Updating existing diff with message: $message..."
  if [[ $current_branch == 'master' ]] ; then
    echo "$cmd: ERROR: Can't update a diff on master; did you forget a"
    echo "$cmd:        reviewer or forget to switch to a branch?"
    exit 1
  fi
  git commit -a -m "$message"
  arc diff $diff_branch --nounit --verbatim --allow-untracked --message "$message"
  exit 0
fi

# Make a branch name from the commit message; for example
#
#  Extend the fooBar to handle "Stuff"
#
# becomes
#
#  extend-the-foobar-to-handle-stuff
#
declare -r branch_name=$(arcutils_branchname "$message")

echo "$cmd: Creating new diff with message: $message..."

# Use git stash instead of checkout -b to support added but not committed files.
git stash
git checkout -b $branch_name
git stash apply

git commit -a -m "$message"
arc diff $diff_branch --verbatim --allow-untracked --reviewers $reviewer
